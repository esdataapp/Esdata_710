Primero hay que limpiar el csv, contiene simbolos raros y errores en vocales minusculas con acento, vocales mayusculas con acento y "Ñ", "ñ", y otros caracteres.

[
    {
        "nombre_variable": "id",
        "columna_csv": 0,
        "formato_entrada": "Entero, e.g., '1', '2'",
        "formato_salida": "Entero o string, e.g., 1, 2",
        "tipo_dato": "int",
        "reglas_transformacion": [
            "Hay que crear un id para ubicar rapidamente de que csv proviene la propiedad, y que contenga informacion de la propeidad para los duplicados".
        ],
        "manejo_errores": "Si no es convertible o nulo, asignar None o 0 dependiendo del contexto (e.g., IDs no pueden ser 0 si es primario).",
        "validaciones": "Valor > 0, único en el dataset."
    },
    {
        "nombre_variable": "PaginaWeb",
        "columna_csv": 1,
        "formato_entrada": "Texto, e.g., 'Inm24'",
        "formato_salida": "String, e.g., 'Inm24'",
        "tipo_dato": "str",
        "reglas_transformacion": [
            "Strip de espacios en blanco.",
            "Convertir a mayúsculas o minúsculas para estandarizar si es necesario (e.g., 'inm24' -> 'Inm24')."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Longitud razonable (e.g., < 50 caracteres), valores esperados como 'Inm24', 'CyT', 'Lam'."
    },
    {
        "nombre_variable": "Ciudad",
        "columna_csv": 2,
        "formato_entrada": "Texto, e.g., 'Gdl'",
        "formato_salida": "String, e.g., 'Gdl'",
        "tipo_dato": "str",
        "reglas_transformacion": [
            "Strip de espacios.",
            "Estandarizar abreviaturas (e.g., 'Guadalajara' -> 'Gdl' si es consistente)."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Valores esperados como 'Zap', 'Gdl', 'Tlaq'."
    },
    {
        "nombre_variable": "Fecha Scrap",
        "columna_csv": 3,
        "formato_entrada": "String como '01/05/2025' o número Excel como '45748'",
        "formato_salida": "Fecha como string '01/05/2025' o datetime object",
        "tipo_dato": "datetime.datetime o str",
        "reglas_transformacion": [
            "Si es número (serial Excel), convertir usando datetime.date(1900, 1, 1) + timedelta(days=valor - 2).",
            "Si es string 'DD/MM/YYYY', parsear con datetime.strptime(valor, '%d/%m/%Y').",
            "Output como 'DD/MM/YYYY'."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Fecha válida, no futura más allá de hoy (2025-09-07)."
    },
    {
        "nombre_variable": "tipo_propiedad",
        "columna_csv": 4,
        "formato_entrada": "Texto, e.g., 'Departamento'",
        "formato_salida": "String, e.g., 'Dep'",
        "tipo_dato": "str",
        "reglas_transformacion": [
            "Strip espacios.",
            "Abreviar si es necesario (e.g., 'Departamento' -> 'Dep', 'Casa' -> 'Cas')."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Valores esperados como 'Cas', 'Dep', 'Ofc'."
    },
    {
        "nombre_variable": "area_m2",
        "columna_csv": 5,
        "formato_entrada": "Texto con números y símbolos, e.g., '350m²', '73m²'",
        "formato_salida": "Float redondeado a 2 decimales, e.g., 350.00",
        "tipo_dato": "float",
        "reglas_transformacion": [
            "Eliminar símbolos no numéricos como 'm²', espacios (usar regex r'[^\d.]').",
            "Convertir a float.",
            "Redondear con round(valor, 2)."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Valor > 0."
    },
    {
        "nombre_variable": "recamaras",
        "columna_csv": 6,
        "formato_entrada": "Entero, e.g., '3', '2'",
        "formato_salida": "Entero, e.g., 3, 2",
        "tipo_dato": "int",
        "reglas_transformacion": [
            "Convertir a int si es string."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Valor >= 0."
    },
    {
        "nombre_variable": "estacionamientos",
        "columna_csv": 7,
        "formato_entrada": "Entero, e.g., '2', '1'",
        "formato_salida": "Entero, e.g., 2, 1",
        "tipo_dato": "int",
        "reglas_transformacion": [
            "Convertir a int."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Valor >= 0."
    },
    {
        "nombre_variable": "operacion",
        "columna_csv": 8,
        "formato_entrada": "Texto, e.g., 'venta'",
        "formato_salida": "String, e.g., 'Ven'",
        "tipo_dato": "str",
        "reglas_transformacion": [
            "Abreviar (e.g., 'venta' -> 'Ven', 'renta' -> 'Ren')."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Valores como 'Ven', 'Ren', 'Ven-d'."
    },
    {
        "nombre_variable": "precio",
        "columna_csv": 9,
        "formato_entrada": "Texto con números, e.g., 'ventaMN 19,000,000', 'ventaMN 2,982,492'",
        "formato_salida": "Float redondeado a 2 decimales, e.g., 19000000.00",
        "tipo_dato": "float",
        "reglas_transformacion": [
            "Extraer números después de 'MN ' o similar (usar regex para capturar dígitos y comas).",
            "Eliminar comas como separadores de miles.",
            "Convertir a float, redondear a 2 decimales."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
		"Redondear con round(valor, 2)."
        "validaciones": "Valor > 0."
    },
    {
        "nombre_variable": "mantenimiento",
        "columna_csv": 10,
        "formato_entrada": "Texto con números, e.g., 'Mantenimiento MN 1,950', o vacío",
        "formato_salida": "Float redondeado a 2 decimales, e.g., 1950.00",
        "tipo_dato": "float",
        "reglas_transformacion": [
            "Extraer números después de 'MN ' (regex similar al precio).",
            "Eliminar comas, convertir a float, redondear."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
		"Redondear con round(valor, 2)."
        "validaciones": "Valor >= 0."
    },
    {
        "nombre_variable": "direccion",
        "columna_csv": 11,
        "formato_entrada": "Texto, e.g., 'Mar Mediterraneo 1103,  Country Club, Guadalajara'",
        "formato_salida": "String limpia",
        "tipo_dato": "str",
        "reglas_transformacion": [
            "Strip espacios extras, normalizar comas."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Longitud > 5 caracteres."
    },
    {
        "nombre_variable": "ubicacion_url",
        "columna_csv": 12,
        "formato_entrada": "URL completa, e.g., 'https://maps.google.com/...center=20.698897000000000,-103.373056600000000&...'",
        "formato_salida": "String de coordenadas, e.g., 'center=20.698897000000000,-103.373056600000000'",
        "tipo_dato": "str",
        "reglas_transformacion": [
            "Extraer parámetro 'center=' usando string split o regex (r'center=([\d.-]+,[\d.-]+)')."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Formato lat,long válido."
    },
    {
        "nombre_variable": "titulo",
        "columna_csv": 13,
        "formato_entrada": "Texto, e.g., 'Departamento PH en Venta en El Country Club \"Torre Galatea\"'",
        "formato_salida": "String limpia",
        "tipo_dato": "str",
        "reglas_transformacion": [
            "Strip espacios, eliminar comillas extras si necesario."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Ninguna específica."
    },
    {
        "nombre_variable": "descripcion",
        "columna_csv": 14,
        "formato_entrada": "Texto largo, e.g., 'PH en venta en el Country Club...'",
        "formato_salida": "String",
        "tipo_dato": "str",
        "reglas_transformacion": [
            "Strip líneas nuevas y espacios extras.",
            "Corregir encodings (e.g., .encode('latin1').decode('utf-8'))."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Longitud > 0."
    },
    {
        "nombre_variable": "anunciante",
        "columna_csv": 15,
        "formato_entrada": "Texto con números/symbolos, e.g., 'SILDUR Agencia Inmobiliaria'",
        "formato_salida": "String limpia",
        "tipo_dato": "str",
        "reglas_transformacion": [
            "Strip espacios, eliminar prefijos como '.inmobiliaria' si aplica."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Ninguna."
    },
    {
        "nombre_variable": "codigo_anunciante",
        "columna_csv": 16,
        "formato_entrada": "Texto con números, e.g., 'EB-NE2578'",
        "formato_salida": "String",
        "tipo_dato": "str",
        "reglas_transformacion": [
            "Strip espacios."
        ],
        "manejo_errores": "Si nulo, asignar None.",
        "validaciones": "Formato alfanumérico."
    },
    {
        "nombre_variable": "codigo_inmuebles24",
        "columna_csv": 17,
        "formato_entrada": "Enteros como string, e.g., '91159456'",
        "formato_salida": "String",
        "tipo_dato": "str",
        "reglas_transformacion": [
            "Mantener como string para evitar pérdida de ceros."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Longitud típica de código."
    },
    {
        "nombre_variable": "tiempo_publicacion",
        "columna_csv": 18,
        "formato_entrada": "Texto con números, e.g., 'Publicado hace más de 1 año', 'Publicado hace 61 días'",
        "formato_salida": "Entero de días, e.g., >365, 61",
        "tipo_dato": "int",
        "reglas_transformacion": [
            "Parsear texto: 'hace X días' -> X, 'desde ayer' -> 1, 'Hoy' -> 0 o 1, 'más de un año' -> 366.",
            "Usar regex para extraer números y unidades (días, año).",
            "Si 'más de un año', asignar 366; si 'hace X días', int(X)."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Valor >= 0."
    },
    {
        "nombre_variable": "area_total",
        "columna_csv": 19,
        "formato_entrada": "Texto con símbolos, e.g., '73 m² tot.', vacío",
        "formato_salida": "Float redondeado a 2 decimales, e.g., 73.00",
        "tipo_dato": "float",
        "reglas_transformacion": [
            "Eliminar 'm² tot.', espacios, etc. (regex r'[\d.]+').",
            "Convertir a float, redondear."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Valor > 0."
    },
    {
        "nombre_variable": "area_cubierta",
        "columna_csv": 20,
        "formato_entrada": "Texto con símbolos, e.g., '350 m² cub.'",
        "formato_salida": "Float redondeado a 2 decimales, e.g., 350.00",
        "tipo_dato": "float",
        "reglas_transformacion": [
            "Similar a area_total: extraer número."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Valor <= area_total si aplica."
    },
    {
        "nombre_variable": "banos_icon",
        "columna_csv": 21,
        "formato_entrada": "Texto con números, e.g., '4 baños', '2 baños'",
        "formato_salida": "Float redondeado a 1 decimal, e.g., 4.0, 2.0",
        "tipo_dato": "float",
        "reglas_transformacion": [
            "Extraer número antes de 'baños' (regex r'(\d+) ba').",
            "Convertir a float, redondear a 1."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Valor >= 0."
    },
    {
        "nombre_variable": "estacionamientos_icon",
        "columna_csv": 22,
        "formato_entrada": "Texto con números, e.g., '2 estac.', '1 estac.'",
        "formato_salida": "Entero, e.g., 2, 1",
        "tipo_dato": "int",
        "reglas_transformacion": [
            "Extraer número (regex r'(\d+) estac').",
            "Convertir a int."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Consistente con 'estacionamientos'."
    },
    {
        "nombre_variable": "recamaras_icon",
        "columna_csv": 23,
        "formato_entrada": "Texto con números, e.g., '3 rec.', '2 rec.'",
        "formato_salida": "Entero, e.g., 3, 2",
        "tipo_dato": "int",
        "reglas_transformacion": [
            "Extraer número (regex r'(\d+) rec')."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Consistente con 'recamaras'."
    },
    {
        "nombre_variable": "medio_banos_icon",
        "columna_csv": 24,
        "formato_entrada": "Texto con números, e.g., '1 medio baño', vacío",
        "formato_salida": "Entero, e.g., 1, 0",
        "tipo_dato": "int",
        "reglas_transformacion": [
            "Extraer número (regex r'(\d+) medio')."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Valor >= 0."
    },
    {
        "nombre_variable": "antiguedad_icon",
        "columna_csv": 25,
        "formato_entrada": "Texto/números/estados, e.g., 'A estrenar', '1 años', '5 años', 'en construcción'",
        "formato_salida": "Entero o string, e.g., 0 para 'A estrenar', 1 para '1 años', 'en construcción'",
        "tipo_dato": "int o str",
        "reglas_transformacion": [
            "Si numérico 'X años' -> int(X).",
            "Si 'A estrenar' -> 0.",
            "Mantener strings como 'en construcción', 'preventa'."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Si int, >= 0."
    },
    {
        "nombre_variable": "Características generales",
        "columna_csv": 26,
        "formato_entrada": "Texto, e.g., 'Amueblado; Elevador; Alberca; ...'",
        "formato_salida": "String",
        "tipo_dato": "str",
        "reglas_transformacion": [
            "Strip y normalizar separadores (e.g., ';' -> ', ').",
            "Corregir encodings."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Ninguna."
    },
    {
        "nombre_variable": "Servicios",
        "columna_csv": 27,
        "formato_entrada": "Texto, e.g., 'Gimnasio; Aire acondicionado; ...'",
        "formato_salida": "String",
        "tipo_dato": "str",
        "reglas_transformacion": [
            "Similar a características: normalizar."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Ninguna."
    },
    {
        "nombre_variable": "Amenidades",
        "columna_csv": 28,
        "formato_entrada": "Texto, e.g., 'Area de eventos'",
        "formato_salida": "String",
        "tipo_dato": "str",
        "reglas_transformacion": [
            "Normalizar."
        ],
        "manejo_errores": "Asignar ''.",
        "validaciones": "Ninguna."
    },
    {
        "nombre_variable": "Exteriores",
        "columna_csv": 29,
        "formato_entrada": "Texto, e.g., 'Balcón(es); Jardín Privado'",
        "formato_salida": "String",
        "tipo_dato": "str",
        "reglas_transformacion": [
            "Normalizar y corregir encodings."
        ],
        "manejo_errores": "Si es vacio o nulo 'Desconocido'.",
        "validaciones": "Ninguna."
    },
]